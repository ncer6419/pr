class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def create(self, values):
        for value in values:
            self.append(value)

    def append(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return
        current = self.head
        while current.next:
            current = current.next
        current.next = new_node

    def add_at_beginning(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node

    def add_at_index(self, data, index):
        if index == 0:
            self.add_at_beginning(data)
            return
        new_node = Node(data)
        current = self.head
        count = 0
        while current and count < index - 1:
            current = current.next
            count += 1
        if not current:
            print("Index out of bounds!")
            return
        new_node.next = current.next
        current.next = new_node

    def remove_from_end(self):
        if not self.head:
            print("List is empty!")
            return
        if not self.head.next:
            self.head = None
            return
        current = self.head
        while current.next and current.next.next:
            current = current.next
        current.next = None

    def remove_from_beginning(self):
        if not self.head:
            print("List is empty!")
            return
        self.head = self.head.next

    def remove_at_index(self, index):
        if not self.head:
            print("List is empty!")
            return
        if index == 0:
            self.remove_from_beginning()
            return
        current = self.head
        count = 0
        while current.next and count < index - 1:
            current = current.next
            count += 1
        if not current.next:
            print("Index out of bounds!")
            return
        current.next = current.next.next

    def display(self):
        current = self.head
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")

if __name__ == "__main__":
    ll = LinkedList()

    while True:
        print("\nOperations:")
        print("1. Create Linked List")
        print("2. Add Node at Beginning")
        print("3. Add Node at Specific Index")
        print("4. Remove Node from End")
        print("5. Remove Node from Beginning")
        print("6. Remove Node at Specific Index")
        print("7. Display Linked List")
        print("8. Exit")
        
        choice = int(input("Enter your choice: "))
        
        if choice == 1:
            values = list(map(int, input("Enter values separated by space: ").split()))
            ll.create(values)
        elif choice == 2:
            value = int(input("Enter value to add at beginning: "))
            ll.add_at_beginning(value)
        elif choice == 3:
            value = int(input("Enter value to add: "))
            index = int(input("Enter index to insert at: "))
            ll.add_at_index(value, index)
        elif choice == 4:
            ll.remove_from_end()
        elif choice == 5:
            ll.remove_from_beginning()
        elif choice == 6:
            index = int(input("Enter index to remove at: "))
            ll.remove_at_index(index)
        elif choice == 7:
            ll.display()
        elif choice == 8:
            print("Exiting program.")
            break
        else:
            print("Invalid choice! Please try again.")
